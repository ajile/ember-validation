<h1>Валидаторы</h1>

<p>Что представляют из себя валидаторы? По простому говоря валидатор - это функция, которая принимает значение, проверяет его и возвращает рельтат проверки. На самом же деле валидатор чуть сложнее, он получает Snapshot объекта, имя аттрибута и параметры валидации, а возвращает промис, который режектится с ключем ошибки. По имени аттрибута валидатор достает значение из снепшота и в соотвествии с параметрами валидации осуществляет проверку.</p>

<p>Появляется разумный протест: "почему это валидатор получает объект целиком, а не просто значение одного поля, которое надо провалидировать, ведь это может быть опасно!". Ничего подобного. Валидатор получает не сам объект, а его копию, называемую снепшотом. Изменение значений аттрибутов этого снепшота не приводит к изменению свойств исходного объекта, но предоставляет нам дополнительные возможности для валидации поля.</p>

<p>Например в России у каждой компании должен быть <code>расчетный счет</code> и <code>БИК</code>. Это циферные поля, от 6 до 12 символов длиной. Валидация этих полей подразумевает расчет контрольной суммы по некоторым правилам. Причем если контрольную сумму БИК можно посчитать независимо от других полей, то вот алгоритм получения контрольной суммы расчетного счета зависит от БИК. Если бы валидаторы получали лишь значение поля, которое надо провалидировать, реализация данного валидаторы была бы невозможна.</p>

<h2>Валидаторы атомарны, но не сингулярны</h2>
<p>Валидаторы выполняют проверку в рамках своей области, но могут возвращать не один тип ошибки. К примеру возьмем number валидатор. Казалось бы этот валидатор должен проверять входное значение на число. Так и есть. Но у каждого числа есть свои свойства, которые также можно проверять, например: isPositive, min, max, isInteger.</p>

<h2>Предустановленные валидаторы</h2>

<p>Мы не стали мудрить и включили в проект лишь самые востребованные валидаторы. Уверен, что все валидаторы на свете вам ни к чему. К примеру если вы из Франции, вряд ли вам понядобятся валидаторы банковских реквизитов России, также как и наоборот, вряд ли Российскому разработчику потребуется валидация машинных номеров Франции. В общем такие частные валидаторы мы обдаем на откуп разработчиков. Возможно в будующем мы соберем все эти валидаторы вместе и сделаем отдельный проект.</p>

<ul>
  <li>required</li>
  <li>number</li>
  <li>string</li>
  <li>email</li>
  <li>regexp</li>
</ul>

<h2>Расширение возможностей валидаторов</h2>

<p>Как было написано выше: у каждого значения, присланного в валидатор есть свои свойства, которые проверяются. Мы учли лишь основные, например для строки это длина, для числа это минимум и максимум и т.п. Если проверок этих свойств вам не хватает вы можете расширить их. Как это сделать? Для этого нужно просто переопределенить нужные модель валидатора в вашем проекте и экспортировать дефолтную функцию из этого модуля. Сама функция может вызывать соответвующую функцию из ember-validation.</p>
